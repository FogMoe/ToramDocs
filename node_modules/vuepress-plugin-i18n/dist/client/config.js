// src/client/config.ts
import { defineClientConfig } from "@vuepress/client";

// sfc-script:/home/runner/work/vuepress-plugin-i18n/vuepress-plugin-i18n/src/client/components/I18nTip.vue?type=script
import { defineComponent as _defineComponent } from "vue";
import { computed as computed2 } from "vue";
import { isAbsoluteUrl } from "vuepress-shared/client";

// src/client/composables/useI18nData.ts
import { usePageData } from "@vuepress/client";
import { computed } from "vue";

// src/client/define.ts
import {
  translationGuides as _translationGuides,
  locales as _locales
} from "@temp/i18n-locales";
var containerClass = I18N_PLUGIN_CONTAINER_CLASS;
var baseLocalePath = I18N_PLUGIN_BASE_LOCALE_PATH;
var titleClass = I18N_PLUGIN_TITLE_CLASS;
var translationGuides = _translationGuides;
var locales = _locales;

// src/client/composables/useI18nData.ts
var useI18nData = () => computed(() => {
  const {
    outdated: isOutdated = false,
    pathLocale = baseLocalePath,
    sourceLink,
    sourceUpdatedTime,
    untranslated: isUntranslated = false,
    updatedTime
  } = usePageData().value.i18n ?? {};
  const locale = locales[pathLocale ?? baseLocalePath] ?? locales[baseLocalePath];
  const translationGuide = translationGuides[pathLocale] ?? translationGuides[baseLocalePath];
  return {
    isOutdated,
    isUntranslated,
    locale,
    options: {
      baseLocalePath,
      containerClass,
      titleClass
    },
    pathLocale,
    sourceLink,
    sourceUpdatedTime,
    translationGuide,
    updatedTime
  };
});

// sfc-script:/home/runner/work/vuepress-plugin-i18n/vuepress-plugin-i18n/src/client/components/I18nTip.vue?type=script
var I18nTip_default = /* @__PURE__ */ _defineComponent({
  __name: "I18nTip",
  setup(__props, { expose: __expose }) {
    __expose();
    const linkRenderer = (text, url) => `<a href="${url}"${isAbsoluteUrl(url) ? ` target="_blank"` : ""}>${text}</a>`;
    const getContent = (type, locale2, i18nData2) => {
      switch (type) {
        case "untranslated":
          return locale2.untranslated.content(
            linkRenderer,
            i18nData2.translationGuide
          );
        case "outdated":
          if (!i18nData2.updatedTime || !i18nData2.sourceUpdatedTime || !i18nData2.sourceLink) {
            return null;
          } else {
            return locale2.outdated.content(
              linkRenderer,
              i18nData2.sourceUpdatedTime,
              i18nData2.updatedTime,
              i18nData2.sourceLink
            );
          }
        default:
          return null;
      }
    };
    const i18nData = useI18nData();
    const { containerClass: containerClass2, titleClass: titleClass2 } = i18nData.value.options;
    const locale = computed2(() => i18nData.value.locale);
    const showTips = computed2(
      () => i18nData.value.isUntranslated || i18nData.value.isOutdated
    );
    const tipType = computed2(
      () => i18nData.value.isUntranslated ? "untranslated" : "outdated"
    );
    const containerType = computed2(
      () => tipType.value === "untranslated" ? "tip" : "warning"
    );
    const containerTitle = computed2(() => locale.value[tipType.value].title);
    const containerContent = computed2(
      () => showTips.value ? getContent(tipType.value, locale.value, i18nData.value) : null
    );
    const __returned__ = { linkRenderer, getContent, i18nData, containerClass: containerClass2, titleClass: titleClass2, locale, showTips, tipType, containerType, containerTitle, containerContent };
    Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
    return __returned__;
  }
});

// sfc-template:/home/runner/work/vuepress-plugin-i18n/vuepress-plugin-i18n/src/client/components/I18nTip.vue?type=template
import { toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from "vue";
var _hoisted_1 = ["innerHTML"];
function render(_ctx, _cache, $props, $setup, $data, $options) {
  return $setup.showTips && $setup.containerContent ? (_openBlock(), _createElementBlock(
    "div",
    {
      key: 0,
      class: _normalizeClass([...$setup.containerClass, $setup.containerType])
    },
    [
      _createElementVNode(
        "p",
        {
          class: _normalizeClass($setup.titleClass)
        },
        _toDisplayString($setup.containerTitle),
        3
        /* TEXT, CLASS */
      ),
      _createCommentVNode("eslint-disable-next-line vue/no-v-html "),
      _createElementVNode("p", { innerHTML: $setup.containerContent }, null, 8, _hoisted_1)
    ],
    2
    /* CLASS */
  )) : _createCommentVNode("v-if", true);
}

// src/client/components/I18nTip.vue
I18nTip_default.render = render;
I18nTip_default.__file = "src/client/components/I18nTip.vue";
var I18nTip_default2 = I18nTip_default;

// src/client/config.ts
var config_default = defineClientConfig({
  enhance({ app }) {
    app.component("I18nTip", I18nTip_default2);
  }
});
export {
  config_default as default
};
//# sourceMappingURL=config.js.map