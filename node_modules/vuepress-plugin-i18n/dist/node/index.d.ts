import { Page, App, Plugin } from '@vuepress/core';
import { I as I18nPluginLocaleData, P as Page$1 } from '../types-84f7af62.js';
export { a as I18nData, c as I18nPageData, b as I18nPluginFrontmatter, d as I18nPluginPageData, L as LinkRenderer, e as PageData } from '../types-84f7af62.js';
import { App as App$1 } from 'vuepress';
import '@vuepress/plugin-git';

type DeepPartial<T> = T extends object ? {
    [P in keyof T]?: DeepPartial<T[P]>;
} : T;
interface I18nPluginTipOptions {
    /**
     * Enable tip containers
     * @default true
     */
    enable: boolean;
    /**
     * Classes of the container div (type of container will always be add)
     * @default ["custom-container", "hint-container"]
     */
    containerClass: string[];
    /**
     * Classes of the container title
     * @default ["custom-container-title", "hint-container-title"]
     */
    titleClass: string[];
    /**
     * Name for tip component, which will be inserted at the top of the page
     * NOTE: You need to import your component globally by yourself
     * @default "I18nTip"
     */
    tipComponent: string;
}
interface I18nPluginInternalOptions {
    /**
     * Prefixes for source language
     * @default "/"
     */
    baseLocalePath: string;
    /**
     * Page filter
     * @param page VuePress page object
     * @returns Whether the page should be included
     */
    filter: (page: Page) => boolean;
    /**
     * Link to translation guide(in default locale)
     */
    translationGuide?: string;
    /**
     * Custom locales for i18n plugin
     */
    locales: Record<string, Partial<I18nPluginLocaleData>>;
    /**
     * Add tag `untranslated` or `outdated` to page
     * need to load before [vuepress-plugin-blog2]{@link https://www.npmjs.com/package/vuepress-plugin-blog2}
     * @default false
     */
    tag: boolean;
    /**
     * Tip container options
     * @see I18nPluginTipOptions
     */
    tip: I18nPluginTipOptions;
    /**
     * Calculate updatedTime when not exist
     * - `git`: read updated time from git
     * - `file`: read updated time from file info
     * - a function:
     *   @param page VuePress page object
     *   @param app VuePress app
     *   @returns a mode name or a timestamp
     * @note git mode may significantly slow down dev server startup
     * @default (_page, app) => app.env.isBuild || app.env.isDebug ? "git" : undefined
     */
    updatedTime: "git" | "file" | ((page: Page, app: App) => number | undefined | "git" | "file");
}
interface I18nPluginOptions extends Omit<DeepPartial<I18nPluginInternalOptions>, "tip"> {
    tip?: I18nPluginTipOptions | boolean;
}

declare const i18nPlugin: (_options?: I18nPluginOptions) => Plugin;

declare const getUpdateTime: (page: Page$1, app: App$1, options: I18nPluginInternalOptions) => Promise<number | undefined>;

declare const markOutdatedPage: (page: Page$1, app: App, options: I18nPluginInternalOptions) => void;

declare const addPageData: (page: Page$1, app: App$1, options: I18nPluginInternalOptions) => Promise<void>;

declare const fillUntranslatedPages: (page: Page, app: App, options: I18nPluginInternalOptions) => Promise<void>;

declare const writeLocales: (app: App, locales: Record<string, I18nPluginLocaleData>, { translationGuide }: I18nPluginInternalOptions) => Promise<void>;

export { I18nPluginLocaleData, Page$1 as Page, addPageData, i18nPlugin as default, fillUntranslatedPages, getUpdateTime, markOutdatedPage, writeLocales };
