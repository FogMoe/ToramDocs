{"version":3,"sources":["../../src/node/plugin.ts","../../src/node/options.ts","../../src/node/utils.ts","../../src/node/locales/en.ts","../../src/node/locales/zh.ts","../../src/node/locales/index.ts","../../src/node/lib/getUpdateTime.ts","../../src/node/lib/outdated.ts","../../src/node/lib/pageData.ts","../../src/node/lib/untranslated.ts","../../src/node/lib/writeLocales.ts","../../src/node/index.ts"],"sourcesContent":["import { getDirname, path } from \"@vuepress/utils\";\nimport {\n  preparePageData,\n  type App,\n  type Plugin,\n  preparePagesComponents,\n} from \"@vuepress/core\";\nimport { watch } from \"chokidar\";\nimport type { Page } from \"../shared/types.js\";\nimport { type I18nPluginOptions, getOptions } from \"./options.js\";\nimport {\n  addComponent,\n  getLocales,\n  getPageFromDataFilePath,\n  PLUGIN_NAME,\n} from \"./utils.js\";\nimport {\n  addPageData,\n  fillUntranslatedPages,\n  markOutdatedPage,\n  writeLocales,\n} from \"./lib/index.js\";\nimport locales from \"./locales/index.js\";\n\nconst __dirname = getDirname(import.meta.url);\n\nexport const i18nPlugin =\n  (_options: I18nPluginOptions = {}): Plugin =>\n  (app: App) => {\n    const options = getOptions(app, _options);\n    let isInited = false;\n\n    return {\n      name: PLUGIN_NAME,\n      define: {\n        I18N_PLUGIN_CONTAINER_CLASS: options.tip.containerClass,\n        I18N_PLUGIN_BASE_LOCALE_PATH: options.baseLocalePath,\n        I18N_PLUGIN_TITLE_CLASS: options.tip.titleClass,\n      },\n      clientConfigFile: path.resolve(__dirname, \"../client/config.js\"),\n      extendsPage: async (page: Page, app: App) => {\n        if (options.filter(page) || page.frontmatter[\"_i18n\"]) {\n          if (options.tip.enable)\n            addComponent(app, page, options.tip.tipComponent);\n          await addPageData(page, app, options);\n          if (isInited) markOutdatedPage(page, app, options);\n        }\n      },\n      onInitialized: async (app) => {\n        isInited = true;\n        await Promise.all(\n          app.pages.map(async (page) => {\n            if (options.filter(page)) {\n              markOutdatedPage(page, app, options);\n              await fillUntranslatedPages(page, app, options);\n            }\n          }),\n        );\n      },\n      onPrepared: async (app) =>\n        await writeLocales(app, getLocales(app.siteData, locales), options),\n      onWatched: (app, watcher) => {\n        const pageWatcher = watch(\"pages/**/*.js\", {\n          cwd: app.dir.temp(),\n          ignoreInitial: true,\n        });\n        pageWatcher.on(\"change\", (filePath) => {\n          const page: Page | undefined = getPageFromDataFilePath(app, filePath);\n          if (page && page.data.i18n?.updatedTime) {\n            app.pages.forEach((p: Page) => {\n              if (p.data.i18n?.sourceLink === page.path && p.data.i18n)\n                p.data.i18n.sourceUpdatedTime = page.data.i18n!.updatedTime!;\n              void preparePageData(app, page);\n            });\n          }\n        });\n\n        //  Remove filled page if source has been removed\n        pageWatcher.on(\"unlink\", (filePath) => {\n          const { path, pathLocale } =\n            getPageFromDataFilePath(app, filePath) ?? {};\n          if (pathLocale === options.baseLocalePath && path) {\n            const pageCount = app.pages.length;\n            app.pages = app.pages.filter(\n              (page: Page) =>\n                !(\n                  page.path ===\n                    path.replace(options.baseLocalePath, page.pathLocale) &&\n                  page.data.i18n?.untranslated\n                ),\n            );\n            // Re-prepare only if some pages are removed\n            if (app.pages.length < pageCount) void preparePagesComponents(app);\n          }\n        });\n        watcher.push(pageWatcher);\n      },\n    };\n  };\n","import type { App, Page } from \"@vuepress/core\";\nimport type { I18nPluginLocaleData } from \"../shared/types.js\";\n\ntype DeepPartial<T> = T extends object\n  ? {\n      [P in keyof T]?: DeepPartial<T[P]>;\n    }\n  : T;\n\ninterface I18nPluginTipOptions {\n  /**\n   * Enable tip containers\n   * @default true\n   */\n  enable: boolean;\n  /**\n   * Classes of the container div (type of container will always be add)\n   * @default [\"custom-container\", \"hint-container\"]\n   */\n  containerClass: string[];\n  /**\n   * Classes of the container title\n   * @default [\"custom-container-title\", \"hint-container-title\"]\n   */\n  titleClass: string[];\n  /**\n   * Name for tip component, which will be inserted at the top of the page\n   * NOTE: You need to import your component globally by yourself\n   * @default \"I18nTip\"\n   */\n  tipComponent: string;\n}\n\ninterface I18nPluginInternalOptions {\n  /**\n   * Prefixes for source language\n   * @default \"/\"\n   */\n  baseLocalePath: string;\n  /**\n   * Page filter\n   * @param page VuePress page object\n   * @returns Whether the page should be included\n   */\n  filter: (page: Page) => boolean;\n  /**\n   * Link to translation guide(in default locale)\n   */\n  translationGuide?: string;\n  /**\n   * Custom locales for i18n plugin\n   */\n  locales: Record<string, Partial<I18nPluginLocaleData>>;\n  /**\n   * Add tag `untranslated` or `outdated` to page\n   * need to load before [vuepress-plugin-blog2]{@link https://www.npmjs.com/package/vuepress-plugin-blog2}\n   * @default false\n   */\n  tag: boolean;\n  /**\n   * Tip container options\n   * @see I18nPluginTipOptions\n   */\n  tip: I18nPluginTipOptions;\n  /**\n   * Calculate updatedTime when not exist\n   * - `git`: read updated time from git\n   * - `file`: read updated time from file info\n   * - a function:\n   *   @param page VuePress page object\n   *   @param app VuePress app\n   *   @returns a mode name or a timestamp\n   * @note git mode may significantly slow down dev server startup\n   * @default (_page, app) => app.env.isBuild || app.env.isDebug ? \"git\" : undefined\n   */\n  updatedTime:\n    | \"git\"\n    | \"file\"\n    | ((page: Page, app: App) => number | undefined | \"git\" | \"file\");\n}\n\ninterface I18nPluginOptions\n  extends Omit<DeepPartial<I18nPluginInternalOptions>, \"tip\"> {\n  tip?: I18nPluginTipOptions | boolean;\n}\n\nconst defaultOptions: I18nPluginInternalOptions = {\n  filter: (page) => page.frontmatter[\"homepage\"] !== true && !!page.filePath,\n  locales: {},\n  baseLocalePath: \"/\",\n  tip: {\n    enable: true,\n    containerClass: [\"custom-container\", \"hint-container\"],\n    titleClass: [\"custom-container-title\", \"hint-container-title\"],\n    tipComponent: \"I18nTip\",\n  },\n  tag: false,\n  updatedTime: (_page, app) =>\n    app.env.isBuild || app.env.isDebug ? \"git\" : undefined,\n};\n\nconst getOptions: (\n  app: App,\n  options: I18nPluginOptions,\n) => I18nPluginInternalOptions = (app, options) => ({\n  ...defaultOptions,\n  calcUpdatedTime: app.env.isBuild || app.env.isDebug,\n  tip:\n    typeof options.tip === \"boolean\"\n      ? {\n          ...defaultOptions.tip,\n          enable: options.tip,\n        }\n      : options.tip ?? defaultOptions.tip,\n  ...Object.fromEntries(\n    Object.entries(options).filter(([key]) => key !== \"tip\"),\n  ),\n});\nexport {\n  defaultOptions,\n  getOptions,\n  type I18nPluginInternalOptions,\n  type I18nPluginOptions,\n};\n","import {\n  type App,\n  type Page,\n  type SiteData,\n  renderPageContent,\n} from \"@vuepress/core\";\nimport { Logger, deepAssign } from \"vuepress-shared/node\";\nimport pluginLocaleData from \"./locales/index.js\";\nimport type { I18nPluginLocaleData } from \"../shared/types.js\";\n\nconst PLUGIN_NAME = \"vuepress-plugin-i18n\";\n\nconst addComponent = (app: App, page: Page, name: string) => {\n  const { content, filePath, filePathRelative, frontmatter, path } = page;\n  const fmRegExp = /^---$/gm;\n  const headRegExp = /^[\\r\\n]+#\\s.+?[\\r\\n]+/g;\n  fmRegExp.exec(content);\n  fmRegExp.exec(content);\n  let index = fmRegExp.lastIndex ?? 0;\n  headRegExp.exec(content.slice(index));\n  index += headRegExp.lastIndex;\n\n  if (!content.slice(index).startsWith(`<${name} />\\n`)) {\n    page.content =\n      content.slice(0, index) + `<${name} />\\n` + content.slice(index);\n    Object.assign(\n      page,\n      renderPageContent({\n        app,\n        content: page.content,\n        filePath,\n        filePathRelative,\n        options: {\n          path,\n          frontmatter,\n          content,\n          ...(filePath\n            ? {\n                filePath,\n              }\n            : {}),\n        },\n      }),\n    );\n  }\n};\n\nconst getLocales = (\n  siteData: SiteData,\n  customLocales: Record<string, Partial<I18nPluginLocaleData>>,\n) =>\n  Object.fromEntries(\n    Object.entries(siteData.locales).map(([path, { lang = siteData.lang }]) => [\n      path,\n      deepAssign(\n        {},\n        pluginLocaleData[lang] ??\n          pluginLocaleData[siteData.lang] ??\n          pluginLocaleData[\"en-US\"]!,\n        customLocales[lang],\n      ),\n    ]),\n  ) as Record<string, I18nPluginLocaleData>;\n\nconst getPageFromDataFilePath = (app: App, path: string) =>\n  app.pages.find((page) => page.dataFilePath === path);\n\nconst insertAfterFrontmatter = (content: string, data: string) => {\n  const regexp = /^---$/gm;\n  regexp.exec(content);\n  regexp.exec(content);\n  let index = regexp.lastIndex ?? 0;\n  if (content.at(index) === \"\\r\") index++;\n  if (content.at(index) === \"\\n\") index++;\n  return content.slice(0, index) + data + content.slice(index);\n};\n\nconst logger = new Logger(PLUGIN_NAME);\n\nexport {\n  PLUGIN_NAME,\n  addComponent,\n  getLocales,\n  getPageFromDataFilePath,\n  insertAfterFrontmatter,\n  logger,\n};\n","import type { I18nPluginLocaleData } from \"../../shared/types.js\";\n\nconst enLocaleData: I18nPluginLocaleData = {\n  lang: \"en-US\",\n  untranslated: {\n    title: \"Notice\",\n    content: (linkRenderer, translationGuide) =>\n      `This page has not yet been translated${\n        translationGuide\n          ? `, see how you can help ${linkRenderer(\"here\", translationGuide)}`\n          : \"\"\n      }.`,\n  },\n  outdated: {\n    title: \"Warning\",\n    content: (\n      linkRenderer,\n      sourceUpdateTime,\n      translationUpdateTime,\n      sourceLink,\n    ) => {\n      const months = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\",\n      ] as const;\n\n      const getDateString = (timestamp: number) => {\n        const date = new Date(timestamp);\n        return `${date.getDate()} ${\n          months[date.getMonth()] as string\n        } ${date.getFullYear()}`;\n      };\n\n      return `This translation was modified on ${getDateString(\n        translationUpdateTime,\n      )} and an updated version (${getDateString(\n        sourceUpdateTime,\n      )}) is available on the source page. ${linkRenderer(\n        \"View the original page\",\n        sourceLink,\n      )}`;\n    },\n  },\n};\nexport default enLocaleData;\n","import type { I18nPluginLocaleData } from \"../../shared/types.js\";\n\nconst zhLocaleData: I18nPluginLocaleData = {\n  lang: \"zh-CN\",\n  untranslated: {\n    title: \"提示\",\n    content: (linkRenderer, translationGuide) =>\n      `此页面尚未翻译${\n        translationGuide\n          ? `，在${linkRenderer(\"此处\", translationGuide)}了解如何帮我们翻译`\n          : \"\"\n      }。`,\n  },\n  outdated: {\n    title: \"警告\",\n    content: (\n      linkRenderer,\n      sourceUpdateTime,\n      translationUpdateTime,\n      sourceLink,\n    ) => {\n      const getDateString = (timestamp: number) => {\n        const date = new Date(timestamp);\n        return `${date.getFullYear()}年${date.getMonth()}月${date.getDate()}日`;\n      };\n      return `本页面最后修改于${getDateString(\n        translationUpdateTime,\n      )}，原文已在${getDateString(sourceUpdateTime)}更新。${linkRenderer(\n        \"查看原文\",\n        sourceLink,\n      )}`;\n    },\n  },\n};\n\nexport default zhLocaleData;\n","import enLocaleData from \"./en.js\";\nimport zhLocaleData from \"./zh.js\";\n\nconst locales = [enLocaleData, zhLocaleData];\nexport default Object.fromEntries(\n  locales.map((locale) => [locale.lang, locale]),\n);\n","import { fs } from \"@vuepress/utils\";\nimport { checkGitRepo, getUpdatedTime } from \"@vuepress/plugin-git\";\nimport { path } from \"@vuepress/utils\";\nimport type { App } from \"vuepress\";\nimport type { I18nPluginInternalOptions } from \"../options.js\";\nimport { logger } from \"../utils.js\";\nimport type { Page } from \"../../shared/types.js\";\n\nconst inGitRepo: Record<string, boolean> = {};\nconst isGitRepo = (cwd: string) => (inGitRepo[cwd] ??= checkGitRepo(cwd));\n\nexport const getUpdateTime = async (\n  page: Page,\n  app: App,\n  options: I18nPluginInternalOptions,\n): Promise<number | undefined> => {\n  let updatedTimeType = options.updatedTime;\n  if (typeof updatedTimeType === \"function\") {\n    const result = updatedTimeType(page, app);\n    if (result === \"git\" || result === \"file\") updatedTimeType = result;\n    else return result;\n  }\n  switch (updatedTimeType) {\n    case \"git\": {\n      const cwd = app.dir.source();\n      if (page.data.git?.updatedTime) {\n        return page.data.git.updatedTime;\n      } else if (isGitRepo(cwd) && page.filePathRelative) {\n        return await getUpdatedTime(\n          [\n            page.filePathRelative,\n            ...(page.frontmatter.gitInclude ?? []).map((item) =>\n              path.join(page.filePathRelative, \"..\", item),\n            ),\n          ],\n          cwd,\n        );\n      }\n      break;\n    }\n    case \"file\": {\n      if (page.filePath) {\n        return (await fs.stat(page.filePath)).mtimeMs;\n      }\n      break;\n    }\n    default: {\n      logger.warn(\n        `Invalid updatedTime type: ${updatedTimeType as string}, ignored.`,\n      );\n      break;\n    }\n  }\n  return undefined;\n};\n","import type { App } from \"@vuepress/core\";\nimport type { Page } from \"../../shared/types.js\";\nimport type { I18nPluginInternalOptions } from \"../options.js\";\nimport { logger } from \"../utils.js\";\n\nexport const markOutdatedPage = (\n  page: Page,\n  app: App,\n  options: I18nPluginInternalOptions,\n) => {\n  if (page.pathLocale !== options.baseLocalePath) {\n    const baseLocalePath = page.data.i18n?.sourceLink;\n    const sourcePage = (app.pages as Page[]).find(\n      (p) => p.path === baseLocalePath,\n    );\n    const sourceUpdateTime = sourcePage?.data.i18n?.updatedTime;\n    const translationUpdateTime = page.data.i18n?.updatedTime;\n    if (!sourcePage || !sourceUpdateTime || !translationUpdateTime) return;\n    page.data.i18n ||= {};\n    page.data.i18n.sourceUpdatedTime = sourceUpdateTime;\n    if (sourceUpdateTime > translationUpdateTime) {\n      if (app.env.isDebug)\n        logger.info(`Out-of-date page detected: ${page.path}`);\n      page.data.i18n.outdated = true;\n      if (options.tag) {\n        page.frontmatter.tag ||= [];\n        page.frontmatter.tag.push(\"outdated\");\n      }\n    }\n  }\n};\n","import type { App } from \"vuepress\";\nimport { getUpdateTime } from \"./getUpdateTime.js\";\nimport type { I18nPluginFrontmatter, Page } from \"../../shared/types.js\";\nimport type { I18nPluginInternalOptions } from \"../options.js\";\n\nexport const addPageData = async (\n  page: Page,\n  app: App,\n  options: I18nPluginInternalOptions,\n) => {\n  const i18nFrontmatter = (page.frontmatter as I18nPluginFrontmatter)[\"_i18n\"];\n  if (i18nFrontmatter?.pathLocale) page.pathLocale = i18nFrontmatter.pathLocale;\n\n  page.data.i18n ||= {\n    pathLocale: page.pathLocale,\n    sourceLink: page.path.replace(page.pathLocale, options.baseLocalePath),\n    untranslated: i18nFrontmatter?.untranslated ?? false,\n  };\n\n  delete page.frontmatter[\"_i18n\"];\n\n  page.data.i18n.updatedTime = await getUpdateTime(page, app, options);\n\n  if (i18nFrontmatter?.filePathRelative)\n    page.filePathRelative = i18nFrontmatter.filePathRelative;\n};\n","import {\n  type App,\n  createPage,\n  type Page,\n  type PageFrontmatter,\n} from \"@vuepress/core\";\nimport { colors } from \"@vuepress/utils\";\nimport type { I18nPluginFrontmatter } from \"../../shared/types.js\";\nimport type { I18nPluginInternalOptions } from \"../options.js\";\nimport { logger } from \"../utils.js\";\n\nconst fillUntranslatedPages = async (\n  page: Page,\n  app: App,\n  options: I18nPluginInternalOptions,\n) => {\n  if (page.pathLocale === options.baseLocalePath) {\n    const siteLocales = app.siteData.locales;\n    const translationPrefixs = Object.keys(siteLocales).filter(\n      (path) => path !== options.baseLocalePath,\n    );\n    const renderList: Promise<Page>[] = [];\n\n    const pagePaths = app.pages.map((p) => p.path);\n    for (const prefix of translationPrefixs) {\n      if (pagePaths.includes(page.path.replace(options.baseLocalePath, prefix)))\n        continue;\n      const pageOptions = {\n        path: page.path.replace(options.baseLocalePath, prefix),\n        content: page.content,\n        frontmatter: {\n          ...page.frontmatter,\n          _i18n: {\n            pathLocale: prefix,\n            untranslated: true,\n          },\n        } as PageFrontmatter<I18nPluginFrontmatter>,\n      };\n      pageOptions.frontmatter._i18n ||= {};\n      if (page.filePathRelative) {\n        pageOptions.frontmatter._i18n.filePathRelative = `${prefix.slice(1)}${\n          page.filePathRelative\n        }`;\n      }\n      if (options.tag) {\n        pageOptions.frontmatter.tag ||= [];\n        pageOptions.frontmatter.tag.push(\"untranslated\");\n      }\n      renderList.push(createPage(app, pageOptions));\n      if (app.env.isDebug)\n        logger.info(\n          `Fill page ${colors.green(\n            pageOptions.path,\n          )} with source ${colors.green(page.path)}`,\n        );\n    }\n    app.pages.push(...(await Promise.all(renderList)));\n  }\n};\n\nexport { fillUntranslatedPages };\n","import type { App } from \"@vuepress/core\";\nimport { colors } from \"@vuepress/utils\";\nimport type { I18nPluginLocaleData } from \"../../shared/types.js\";\nimport type { I18nPluginInternalOptions } from \"../options.js\";\nimport { logger } from \"../utils.js\";\nimport { isAbsoluteUrl } from \"vuepress-shared\";\n\nconst keyRegExp = /^(?!\\d)[a-z0-9_]+/i;\n/**\n * Generate code string\n * @param input any javascript value\n * @returns restored string\n */\nconst getCodeStr: (input: unknown) => string = (input) => {\n  switch (typeof input) {\n    case \"string\":\n      return `\"${input}\"`;\n    case \"number\":\n    case \"boolean\":\n    case \"function\":\n      return (\n        input as number | boolean | ((...args: never[]) => never)\n      ).toString();\n    case \"object\": {\n      if (input === null) return \"null\";\n      else if (input instanceof Array) {\n        return `[${input.map((m) => getCodeStr(m)).join(\",\")}]`;\n      } else\n        return `{${Object.entries(input)\n          .map(\n            ([key, value]) =>\n              `${keyRegExp.exec(key) ? key : `\"${key}\"`}: ${getCodeStr(value)}`,\n          )\n          .join(\",\")}}`;\n    }\n    default:\n      return `\"${input?.toString() ?? \"null\"}\"`;\n  }\n};\n\nconst gettranslationGuides = (app: App, translationGuide?: string) => {\n  if (!translationGuide || isAbsoluteUrl(translationGuide))\n    return { \"/\": translationGuide };\n  const links: Record<string, string> = { \"/\": translationGuide };\n  app.pages.forEach((page) => {\n    if (page.path === translationGuide.replace(\"/\", page.pathLocale))\n      links[page.pathLocale] = page.path;\n  });\n  return links;\n};\n\nconst writeLocales = async (\n  app: App,\n  locales: Record<string, I18nPluginLocaleData>,\n  { translationGuide }: I18nPluginInternalOptions,\n) => {\n  await app.writeTemp(\n    \"i18n-locales.js\",\n    `export const translationGuides = ${getCodeStr(\n      gettranslationGuides(app, translationGuide),\n    )};\n    export const locales = ${getCodeStr(locales)};`,\n  );\n  if (app.env.isDebug)\n    logger.info(\n      `I18n plugin locales has been written to ${colors.green(\n        app.dir.temp(\"i18n-locales.js\"),\n      )}`,\n    );\n};\n\nexport { writeLocales };\n","import { i18nPlugin } from \"./plugin.js\";\n\nexport * from \"./lib/index.js\";\nexport * from \"../shared/types.js\";\nexport default i18nPlugin;\n"],"mappings":"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","names":["path","path","path","colors","locales","colors","path","app","_a"]}