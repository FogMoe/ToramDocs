import{isString as v}from"@vuepress/helper/client";import{defineComponent as c,ref as g,shallowRef as w,onMounted as y,watch as s,onUnmounted as h,h as i,nextTick as u}from"vue";import{usePageData as D,useSiteData as M}from"vuepress/client";import{LoadingIcon as T}from"vuepress-shared/client";import"artalk/dist/Artalk.css";import"../styles/artalk.scss";import{u as A}from"../index-wG_My4pN.js";var B=c({name:"Artalk",props:{identifier:{type:String,required:!0},darkmode:Boolean},setup(t){const a=A(),o=D(),n=M(),l=g(!1),d=w();let e=null;const m=v(a.server),p=async()=>{const[{default:r}]=await Promise.all([import("artalk/dist/Artalk.mjs"),new Promise(k=>{setTimeout(()=>{k()},a.delay||800)})]);l.value=!0,await u(),e=r.init({useBackendConf:!1,site:n.value.title,pageTitle:o.value.title,...a,el:d.value,pageKey:t.identifier,darkMode:t.darkmode}),a.useBackendConf&&e.on("mounted",()=>{e.setDarkMode(t.darkmode)})},f=()=>{e.update({site:n.value.title,pageTitle:o.value.title,pageKey:t.identifier}),e.reload()};return y(()=>{p(),s(()=>t.identifier,()=>{e&&u().then(()=>f())}),s(()=>t.darkmode,r=>{e?.setDarkMode(r)})}),h(()=>{e?.destroy()}),()=>m?i("div",{class:"artalk-wrapper"},[l.value?null:i(T),i("div",{ref:d})]):null}});export{B as default};
//# sourceMappingURL=Artalk.js.map
